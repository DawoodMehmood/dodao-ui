fragment GuideQuestion on GuideQuestion {
  answerKeys
  choices {
    content
    key
  }
  content
  order
  type
  uuid
  explanation
}

fragment GuideUserInput on GuideUserInput {
  label
  order
  required
  type
  uuid
}

fragment GuideUserDiscordConnect on UserDiscordConnect {
  type
  uuid
}

fragment GuideStepItem on GuideStepItem {
  __typename
  ... on GuideQuestion {
    answerKeys
    choices {
      content
      key
    }
    content
    order
    type
    uuid
    explanation
  }

  ... on GuideUserInput {
    label
    order
    required
    type
    uuid
  }

  ... on UserDiscordConnect {
    type
    uuid
  }
}

fragment GuideStep on GuideStep {
  content
  stepItems {
    __typename
    ... on GuideQuestion {
      answerKeys
      choices {
        content
        key
      }
      content
      order
      type
      uuid
      explanation
    }

    ... on GuideUserInput {
      label
      order
      required
      type
      uuid
    }

    ... on UserDiscordConnect {
      type
      uuid
    }
  }
  id
  name
  order
  uuid
}

fragment GuideIntegration on GuideIntegrations {
  discordRoleIds
  discordRolePassingCount
  discordWebhook
  projectGalaxyCredentialId
  projectGalaxyOatMintUrl
  projectGalaxyOatPassingCount
}


fragment Guide on Guide {
  authors
  categories
  postSubmissionStepContent
  content
  createdAt
  id
  guideIntegrations {
    ...GuideIntegration
  }
  guideSource
  guideType
  name
  steps {
    ...GuideStep
  }
  publishStatus

  thumbnail
  uuid
  version
}

mutation UpsertGuide($spaceId: String!, $guideInput: GuideInput!) {
  payload: upsertGuide(spaceId: $spaceId, guideInput: $guideInput) {
    ...Guide
  }
}

query GuideQuery($spaceId: String!, $uuid: String!) {
  guide(spaceId: $spaceId, uuid: $uuid) {
    ...Guide
  }
}

mutation RefreshGitGuides($spaceId: String!) {
  payload: refreshGitGuides(spaceId: $spaceId)
}
